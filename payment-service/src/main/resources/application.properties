spring.application.name=payment-service
server.port=8085

# Kafka
#spring.kafka.bootstrap-servers=localhost:29092
#spring.kafka.consumer.group-id=payment-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Database Configuration
spring.datasource.url=jdbc:mariadb://localhost:3306/payment_service
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# PayOS
payos.client-id=${PAYOS_API_KEY}
payos.api-key=${PAYOS_CALLBACK_URL}
payos.checksum-key=${PAYOS_CHECKSUM_KEY}
payos.callback-url=${PAYOS_CLIENT_ID}

# Logging cho webhook
logging.level.com.ktpm.paymentService.controller.WebhookController=DEBUG
logging.level.com.ktpm.paymentService.service.WebhookService=DEBUG
logging.level.com.ktpm.paymentService.utils.SignatureUtils=DEBUG

# Order Service
order.service.url=http://localhost:8084


# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:29092
app.kafka.topic.payment-confirmed=payment-confirmed-topic

# Producer configuration - để chỉ định kiểu dữ liệu khi gửi event
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=payment:com.ktpm.paymentService.dto.PaymentConfirmationEvent