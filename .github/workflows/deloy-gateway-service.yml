name: Deploy Gateway Service

on:
  push:
    branches:
      - main
    paths: # Kích hoạt chỉ khi có thay đổi trong thư mục service-a/
      - "gateway-service/**"
      - ".github/workflows/deloy-gateway-service.yml" # Cũng kích hoạt nếu thay đổi workflow này

env:
  SERVICE_NAME: gateway-service # Tên của service
  DOCKER_IMAGE_NAME: yughiohazx/gateway-service # Tên Docker image
  DOCKER_REGISTRY: docker.io # Hoặc docker.io
  # Cổng mà service này sẽ chạy trên server
  SERVICE_PORT: 8090

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: "product"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build Service A with Maven
        run: |
          cd gateway-service # Di chuyển vào thư mục của service
          mvn clean package -DskipTests

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for Service Gateway
        run: |
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest gateway-service/ # Chỉ định thư mục build context

      - name: Push Docker image for Service Gateway
        run: |
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Deploy Service Gateway to Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "Logging into Docker Registry on server..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ env.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "Pulling latest Docker image for ${{ env.SERVICE_NAME }}..."
            docker pull ${{env.DOCKER_IMAGE_NAME}}:latest

            echo "Stopping existing container for ${{ env.SERVICE_NAME }} (if any)..."
            if [ "$(docker ps -q -f name=${{ env.SERVICE_NAME }})" ]; then
              docker stop ${{ env.SERVICE_NAME }}
              docker rm ${{ env.SERVICE_NAME }}
            fi

            echo "Running new container for ${{ env.SERVICE_NAME }}..."
            docker run -d --name ${{ env.SERVICE_NAME }} -p ${{ env.SERVICE_PORT }}:8761 ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            echo "Deployment of ${{ env.SERVICE_NAME }} completed!"
